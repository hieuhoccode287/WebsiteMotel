@model WEBSITE_MOTEL.Models.ChuTro

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAD.cshtml";
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOMJ3W3l0uNGcUbJpD9eJg3mV1ZlXw0G6i5qA6e" crossorigin="anonymous">
    <style>
        .input-group {
            position: relative;
            display: flex;
            align-items: center;
        }

        .input-group-addon {
            background: #707377;
            border: 1px solid #000000;
            border-radius: 0 0.25rem 0.25rem 0;
            padding: 0.375rem 0.75rem;
            cursor: pointer;
        }

        .input-group input {
            padding-right: 40px; /* Add space for the icon */
        }

        .input-group-addon:hover {
            background-color: #d3d3d3; /* Change color on hover */
        }
    </style>
    <script>
        function togglePasswordVisibility() {
            var passwordInput = document.getElementById("password");
            var passwordToggle = document.getElementById("eye-icon");
            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                passwordToggle.classList.remove("fa-eye");
                passwordToggle.classList.add("fa-eye-slash");
            } else {
                passwordInput.type = "password";
                passwordToggle.classList.remove("fa-eye-slash");
                passwordToggle.classList.add("fa-eye");
            }
        }
    </script>


</head>

<h2>Sửa thông tin</h2>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@using (Html.BeginForm("Edit", "QLChutro", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.sId)

        <div class="form-group">
            @Html.LabelFor(model => model.sHotenCT, "Họ tên", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sHotenCT, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.sHotenCT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sTaiKhoanCT, "Tài khoản", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sTaiKhoanCT, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.sTaiKhoanCT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sMatKhauCT, "Mật khẩu", new { @class = "control-label col-md-2" })
            <div class="col-md-10 position-relative">
                <div class="input-group">
                    @Html.TextBoxFor(model => model.sMatKhauCT, new { @class = "form-control", required = "required", id = "password", type = "password", placeholder = "Nhập mật khẩu" })
                    <span class="input-group-addon" onclick="togglePasswordVisibility()">
                        <i class="fa fa-eye" id="eye-icon"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.sMatKhauCT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sEmailCT, "Email", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sEmailCT, new { @class = "form-control", type = "email", required = "required" })
                @Html.ValidationMessageFor(model => model.sEmailCT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sCCCD, "Căn cước công dân", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sCCCD, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.sCCCD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sDiaChi, "Địa chỉ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sDiaChi, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.sDiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sSDTCT, "Số điện thoại", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sSDTCT, new { @class = "form-control", type = "tel", required = "required" })
                @Html.ValidationMessageFor(model => model.sSDTCT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sNgaySinh, "Ngày sinh", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sNgaySinh, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                @Html.ValidationMessageFor(model => model.sNgaySinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu thông tin" class="btn btn-primary">
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("VỀ TRANG QUẢN LÝ CHỦ TRỌ", "Index", null, new { @class = "btn btn-link" })
</div>*@
