@using PagedList.Mvc;
@model PagedList.PagedList<WEBSITE_MOTEL.Models.ChuTro>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAD.cshtml";
}

<div class="row">
    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">
                <h4>QUẢN LÝ TÀI KHOẢN CHỦ TRỌ</h4>
                <div class="row">
                    <div class="col-md-12">
                        <div id="alertContainer">
                            @if (!string.IsNullOrEmpty(TempData["ThongBao"] as string))
                            {
                                <div class="alert alert-success">
                                    @TempData["ThongBao"]
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <!-- Table -->
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th style="text-align:center">ID</th>
                                <th style="text-align:center">Họ tên</th>
                                <th style="text-align:center">Tài khoản</th>
                                <th style="text-align:center">Email</th>
                                <th style="text-align:center">CCCD</th>
                                <th style="text-align:center">Địa chỉ</th>
                                <th style="text-align:center">Điện thoại</th>
                                <th style="text-align:center">Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td style="text-align:center">@Html.DisplayFor(modelItem => item.sId)</td>
                                    <td style="text-align:center">@Html.DisplayFor(modelItem => item.sHotenCT)</td>
                                    <td style="text-align:center">@Html.DisplayFor(modelItem => item.sTaiKhoanCT)</td>
                                    <span class="hidden-password">@item.sMatKhauCT</span>
                                    <td style="text-align:center">@Html.DisplayFor(modelItem => item.sEmailCT)</td>
                                    <td style="text-align:center">@Html.DisplayFor(modelItem => item.sCCCD)</td>
                                    <td style="text-align:center">@Html.DisplayFor(modelItem => item.sDiaChi)</td>
                                    <td style="text-align:center">@Html.DisplayFor(modelItem => item.sSDTCT)</td>
                                    <td style="text-align:center">
                                        <a href="@Url.Action("Edit", new { id = item.sId })" class="btn btn-warning btn-sm" role="button">Sửa</a>
                                        <a href="@Url.Action("Details", new { id = item.sId })" class="btn btn-primary btn-sm" role="button">Xem</a>
                                        <a href="@Url.Action("Delete", new { id = item.sId })" class="btn btn-danger btn-sm" role="button" onclick="return confirm('Bạn có chắc chắn muốn xóa tài khoản này không?')">Xóa</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- Review Accounts Button -->
        <div class="mb-3">
            <a href="@Url.Action("CTApprove","DUYETCT")" class="btn btn-info" style="margin-top:10px">Duyệt tài khoản</a>
        </div>
    </div>
</div>

@{
    var pagedListRenderOptions = new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        UlElementClasses = new[] { "pagination justify-content-center" },
        ContainerDivClasses = new[] { "pagination-wrapper" },
        LiElementClasses = new[] { "page-item" }
    };
}

<div class="row">
    <div class="col-md-12">
        <div class="pagination-wrapper">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), pagedListRenderOptions)
        </div>
    </div>
</div>

<style>
    .pagination-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 20px 0;
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .page-item {
        margin: 0 5px;
    }

    .page-link {
        display: block;
        padding: 8px 12px;
        background: #007bff;
        color: #fff;
        border-radius: 5px;
        transition: background 0.3s, color 0.3s;
        text-decoration: none;
    }

        .page-link:hover {
            background: #0056b3;
            color: #fff;
        }

    .page-item.active .page-link {
        background: #0056b3;
        color: #fff;
    }

    .page-item.disabled .page-link {
        pointer-events: none;
        opacity: 0.6;
    }

    .hidden-password {
        display: none; /* This hides the actual password text */
    }
</style>

<!-- Bootstrap CSS -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">

<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Bootstrap Bundle with Popper -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
