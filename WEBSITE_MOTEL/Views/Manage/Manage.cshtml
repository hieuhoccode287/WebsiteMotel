@model PagedList.IPagedList<WEBSITE_MOTEL.Models.RoomDetail>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Manage";
    Layout = "~/Views/_LayoutUser.cshtml";
}

<div class="nav-text">
    <ol>
        <li><a href="@Url.Action("Index","Motel")">Trang chủ</a></li>
        <li id="arrow1"><i class="fa fa-angle-right"></i></li>
        <li class="active" id="search-target">Quản lý phòng</li>
    </ol>
</div>
<section class="wrap-content">
    <div class="content" style="border: none;">
        <div class="wrapper">
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane active" id="quan_ly_tin">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="white-space: nowrap;" class="td_center">Mã số</th>
                                    <th style="white-space: nowrap; text-align: center">Tiêu đề</th>
                                    <th style="white-space: nowrap; text-align: center">Hình ảnh</th>
                                    <th style="white-space: nowrap; text-align: center">Trạng thái</th>
                                    <th style="white-space: nowrap; text-align: center">Ngày đăng tin</th>
                                    <th style="white-space: nowrap; text-align: center">Ngày hết hạn</th>
                                    <th style="white-space: nowrap; text-align: center">Thao tác</th>
                                    <th style="white-space: nowrap; text-align: center">Hành động</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td class="td_col2 td_matin" style="text-align: center; vertical-align: middle;">@item.sMa</td>

                                        <td class="td_col3" style="height: 100px; text-align: center; vertical-align: middle; word-wrap: break-word; overflow-wrap: break-word; white-space: normal;">
                                            <a class="" target="_blank">@item.sTenPhong</a>
                                        </td>
                                        <td class="td_col2" style="text-align: center; vertical-align: middle;">
                                            <img src="~/Images/@item.sAnhBia" alt="image" style="width:100px; height:100px" loading="lazy">
                                        </td>
                                        <td class="td_col2s td_matin" style="color: #4CAF50; text-align: center; vertical-align: middle;">
                                            @if (item.dNgayCapNhat?.AddMonths(3) >= DateTime.Today && item.sTrangThai == 1)
                                            {
                                                <span> Tin đang được đăng</span>
                                            }
                                            else if (item.sTrangThai == 2)
                                            {
                                                <span style="color: #ED2327">Tin đã hết hạn</span>
                                            }
                                            else if (item.sTrangThai == 0)
                                            {
                                                <span style="color: #ddec71">Đang chờ admin duyệt phòng</span>
                                            }
                                        </td>
                                        <td id="dt1" class="ngay" style="color: #4CAF50; text-align: center; vertical-align: middle;">@Html.FormatValue(item.dNgayCapNhat, "{0:dd/MM/yyyy}")</td>
                                        <td id="dt2" class="ngay" style="color: #ED23227; text-align: center; vertical-align: middle;">@Html.FormatValue(item.dNgayCapNhat?.AddMonths(3), "{0:dd/MM/yyyy}")</td>
                                        <td style="vertical-align: middle;">
                                            <a class="btn btn_action" id="st2" data-id="@item.sMa"><i class="fa fa-refresh"></i> Đăng lại</a>
                                            <a class="btn btn_action" id="st1" data-id="@item.sMa"><i class="fa fa-expeditedssl"></i> Ngừng đăng tin</a>
                                            <a class="btn btn_action" id="idxoa" data-id="@item.sMa"><i class="fa fa-eraser"></i> Xóa</a>
                                        </td>
                                        <td style="height: 100px; text-align: center; vertical-align: middle;">
                                            <a class="btn btn_action btn-success" style="width: 100%" onclick="showRoomEditModal('@item.sMa')">Chỉnh sửa</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="page_navigation">
                        @Html.PagedListPager(Model, page => Url.Action("Manage", new { page }), PagedListRenderOptions.Classic)
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal Xem Chi Tiết Phòng -->
<div class="modal fade" id="roomEditModal" role="dialog" aria-labelledby="roomEditLabel" aria-hidden="true">
    <div class="modal-dialog custom-modal" role="document">
        <div class="modal-content" style="top: 150px; border-radius: 12px; box-shadow: 0 4px 30px rgba(0, 0, 0, 0.2);">
            <div class="modal-header" style="background-color: rgb(51, 204, 102); color: black; border-top-left-radius: 12px; border-top-right-radius: 12px;">
                <h2 class="modal-title" id="roomEditLabel" style="font-weight: bold; font-size: 1.5rem;">Sửa Phòng</h2>
            </div>
            <div class="modal-body">
                <!-- Modal for Full-Size Image -->
                <div class="modal fade" id="imageModal" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-body text-center">
                                <img id="modalImage" src="" alt="Full Size Image" class="img-fluid" style="height: 500px; width:500px;">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="custom-image-container mb-3">
                    <!-- Room Image -->
                    <div class="text-center image-item">
                        <div style="position: relative; display: inline-block;">
                            <img id="roomImage" src="" alt="Room Image" class="img-fluid" style="height: 200px; width: 250px; object-fit: cover; border-radius: 10px; cursor: pointer;" onclick="openImageModal(this.src)">
                            <i class="fa fa-camera" style="position: absolute; top: 5px; right: 5px; color: white; font-size: 24px; cursor: pointer;" onclick="document.getElementById('roomImageUpload').click();"></i>
                        </div>
                        <label style="margin-top: 5px; display: block;">Ảnh bìa</label> <!-- Label for Room Image -->
                    </div>

                    <!-- Composite Image Canvas -->
                    <div class="text-center image-item">
                        <div style="position: relative; display: inline-block;">
                            <canvas id="compositeImageCanvas" width="400" height="400" style="display: none;"></canvas>
                            <img id="compositeImage" src="" alt="Composite Room Image" class="img-fluid" style="height: 200px; width: 250px; object-fit: cover; border-radius: 10px; cursor: pointer;" onclick="openImageModal(this.src)" />
                            <i class="fa fa-camera" style="position: absolute; top: 5px; right: 5px; color: white; font-size: 24px; cursor: pointer;" onclick="document.getElementById('compositeImageUpload').click();"></i>
                        </div>
                        <label style="margin-top: 5px; display: block;">Ảnh chi tiết</label> <!-- Label for Composite Image -->
                    </div>
                </div>


                <div class="mb-3">
                    <input type="file" class="form-control" id="roomImageUpload" accept="image/*" style="display: none;" onchange="previewImage(event)">
                    <input type="file" multiple="multiple" class="form-control" id="compositeImageUpload" accept="image/*" style="display: none;" onchange="previewCompositeImage(event)">
                </div>

                <!-- Modal Fields in 3 Columns -->
                <div class="row">
                    <!-- Column 1 -->
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label for="roomId">ID</label>
                            <input type="text" class="form-control" id="roomId" readonly style="background-color: #f8f9fa;">
                        </div>
                        <div class="mb-3">
                            <label for="roomSoNguoiO">Số Người Ở</label>
                            <select class="form-control" id="roomSoNguoiO">
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="roomSoLuong">Số Lượng Phòng Còn</label>
                            <input type="number" class="form-control" id="roomSoLuong">
                        </div>
                        @*<div class="mb-3">
                                <label for="roomStatus">Trạng Thái</label>
                                <input type="text" class="form-control" id="roomStatus" >
                            </div>*@
                        <div class="mb-3">
                            <label for="roomDien">Giá Điện (đồng/tháng)</label>
                            <div style="display: flex; align-items: center;">
                                <input type="number" class="form-control" id="roomDien" oninput="formatNumber(this)">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="roomGuiXe">Giá Gửi Xe (đồng/tháng)</label>
                            <div style="display: flex; align-items: center;">
                                <input type="number" class="form-control" id="roomGuiXe" oninput="formatNumber(this)">
                            </div>
                        </div>
                    </div>

                    <!-- Column 2 -->
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label for="roomName">Tên Phòng</label>
                            <input type="text" class="form-control" id="roomName">
                        </div>
                        <div class="mb-3">
                            <label for="roomType">Khu Vực</label>
                            <select class="form-control" id="roomType">
                                @foreach (var item in ViewBag.KhuVucList as List<WEBSITE_MOTEL.Models.KHUVUC>) // Assuming KHUVUC is your model for area
                                {
                                    <option value="@item.Id">@item.Ten</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="roomDienTich">Diện Tích (m²)</label>
                            <div style="display: flex; align-items: center;">
                                <input type="number" class="form-control" id="roomDienTich">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="roomNuoc">Giá Nước (đồng/tháng)</label>
                            <div style="display: flex; align-items: center;">
                                <input type="number" class="form-control" id="roomNuoc" oninput="formatNumber(this)">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="roomInternet">Giá Internet (đồng/tháng)</label>
                            <div style="display: flex; align-items: center;">
                                <input type="number" class="form-control" id="roomInternet" oninput="formatNumber(this)">
                            </div>
                        </div>
                    </div>

                    <!-- Column 3 -->
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label for="roomDescribe">Mô tả</label>
                            <textarea class="form-control" id="roomDescribe" rows="2" style="min-height: 35px;"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="roomAddress">Địa Chỉ</label>
                            <textarea class="form-control" id="roomAddress" rows="2" style="min-height: 35px;"></textarea>
                            <i class="fa fa-map-marker" style="margin-top: 5px; cursor: pointer; font-size: 25px; color: #5cb85c;"
                               onclick="openMapModal(document.getElementById('roomId').value)"> Vị trí</i>
                            <span id="coordinateStatus" style="margin-left: 5px; color: #5cb85c;"></span>

                        </div>
                        <div class="mb-3">
                            <label for="roomPilePrice">Giá Cọc (đồng)</label>
                            <div style="display: flex; align-items: center;">
                                <input type="text" class="form-control" id="roomPilePrice" oninput="formatNumber(this)">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="roomPrice">Giá Phòng (đồng/tháng)</label>
                            <div style="display: flex; align-items: center;">
                                <input type="text" class="form-control" id="roomPrice" oninput="formatNumber(this)">
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button id="saveChangesButton" type="submit" class="btn btn-success" data-dismiss="modal" style="font-weight: bold;">Lưu thay đổi</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" style="font-weight: bold;" onclick="reloadPage()">Đóng</button>
            </div>
        </div>
    </div>
</div>

@*<script>
    // Reload the page when the modal is closed
    $('#roomEditModal').on('hidden.bs.modal', function () {
        location.reload(); // This will reload the current page
    });

    function reloadPage() {
        location.reload(); // This will reload the current page
    }
</script>*@

<div id="mapModal" class="modal map-modal">
    <div class="modal-content map-modal-content" style="border: 1px solid rgba(0, 0, 0, 0.1);">
        <span class="close" style="font-size: 4rem;" onclick="closeMapModal()">&times;</span>

        <!-- Input field for address -->
        <!--<div style="margin: 20px 0; text-align: center;">
            <input type="text"
                   id="addressInput"
                   placeholder="Nhập địa chỉ để tìm trên bản đồ"
                   style="width: 80%; padding: 10px; font-size: 1.2rem;"
                   oninput="autocompleteAddress()" />
            <button onclick="findAddress()" style="padding: 10px 20px; font-size: 1.2rem;">Tìm</button>
            <ul id="addressSuggestions" style="list-style-type: none; padding: 0; margin-top: 5px; background-color: white; border: 1px solid #ccc; position: absolute; width: 80%; max-height: 150px; overflow-y: auto;"></ul>
        </div>-->

        <div id="amap" style="width: 100%; height: 500px; margin-top: 50px;"></div>
        <div style="align-items: center; display: flex;">
            <button id="okButton" style="margin-top: 20px;" onclick="saveCoordinates()">OK</button>
        </div>
    </div>
</div>

<script>
    let map;
    let selectedLat = null;
    let selectedLng = null;
    let marker;

    // Đảm bảo mapModal bị tắt khi load trang
    $(document).ready(function () {
        const mapModal = document.getElementById('mapModal');
        console.log("Page loaded, hiding modal");
        mapModal.style.display = 'none';
    });

    function openMapModal(roomId) {
        console.log("openMapModal called with roomId:", roomId);
        $.ajax({
            type: 'GET',
            url: '/Manage/EditRoom',
            data: { id: roomId },
            success: function (response) {
                console.log(response);

                if (response.code === 200) {
                    $('#amap').data('id', response.dh.sMa);

                    if (response.dh && response.dh.length > 0 && response.dh[0].sMap) {
                        var mapData = response.dh[0].sMap;

                        var latLng = mapData.split(',');
                        var lat = parseFloat(latLng[0]);
                        var lng = parseFloat(latLng[1]);

                        if (!isNaN(lat) && !isNaN(lng)) {
                            initializeMap(lat, lng);
                            $('#mapModal').css('display', 'flex');

                            // Đảm bảo bản đồ được điều chỉnh kích thước sau khi modal hiển thị
                            setTimeout(() => {
                                map.invalidateSize();
                            }, 0);
                        } else {
                            console.error("Vĩ độ hoặc kinh độ không hợp lệ.");
                        }
                    } else {
                        console.error("Không thể trích xuất sMap từ phản hồi.");
                    }
                } else {
                    alert(response.msg);
                }
            },
            error: function () {
                alert("An error occurred while fetching room details.");
            }
        });
    }

    function autocompleteAddress() {
        const address = document.getElementById('addressInput').value;
        const suggestionsBox = document.getElementById('addressSuggestions');

        // Clear previous suggestions
        suggestionsBox.innerHTML = '';

        if (address.length < 3) {
            return;  // Nếu nhập ít hơn 3 ký tự thì không hiển thị gợi ý
        }

        const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}&addressdetails=1&limit=5`;

        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (data.length > 0) {
                    data.forEach(item => {
                        const li = document.createElement('li');
                        li.textContent = item.display_name;
                        li.style.padding = '5px';
                        li.style.cursor = 'pointer';
                        li.addEventListener('click', function () {
                            document.getElementById('addressInput').value = item.display_name;
                            findAddress();
                            suggestionsBox.innerHTML = '';  // Clear suggestions after selection
                        });
                        suggestionsBox.appendChild(li);
                    });
                }
            })
            .catch(error => {
                console.error("Error fetching address suggestions:", error);
            });
    }

    function findAddress() {
        const address = document.getElementById('addressInput').value;
        if (!address) {
            alert("Vui lòng nhập địa chỉ!");
            return;
        }

        // Sử dụng API của OpenStreetMap (Nominatim) để chuyển đổi địa chỉ thành tọa độ
        const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;

        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (data.length > 0) {
                    const { lat, lon } = data[0];
                    selectedLat = parseFloat(lat);
                    selectedLng = parseFloat(lon);

                    // Cập nhật bản đồ với tọa độ mới
                    if (map) {
                        map.setView([selectedLat, selectedLng], 13);

                        // Nếu đã có marker, cập nhật vị trí của nó
                        if (marker) {
                            marker.setLatLng([selectedLat, selectedLng]);
                        } else {
                            // Nếu chưa có marker, thêm mới
                            marker = L.marker([selectedLat, selectedLng]).addTo(map);
                        }

                        console.log("Đã tìm thấy địa chỉ:", address, selectedLat, selectedLng);
                    } else {
                        console.error("Bản đồ chưa được khởi tạo.");
                    }
                } else {
                    alert("Không tìm thấy địa chỉ. Vui lòng thử lại.");
                }
            })
            .catch(error => {
                console.error("Error fetching coordinates:", error);
                alert("Có lỗi xảy ra khi tìm địa chỉ.");
            });
    }

    function closeMapModal() {
        const mapModal = document.getElementById('mapModal');
        console.log("Closing modal");
        mapModal.style.display = 'none';

        if (map) {
            map.remove();
            map = null;
        }
    }

    function initializeMap(lat, lng) {
        // Tạo một phiên bản bản đồ mới
        map = L.map('amap').setView([lat, lng], 13);

        // Thêm lớp tile vào bản đồ
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Thêm một marker cho vị trí này
        marker = L.marker([lat, lng]).addTo(map)
            .openPopup();

        // Cập nhật tọa độ đã chọn khi nhấp vào bản đồ
        map.on('click', function (e) {
            selectedLat = e.latlng.lat;
            selectedLng = e.latlng.lng;

            // Cập nhật marker với tọa độ mới
            marker.setLatLng([selectedLat, selectedLng]).update();
            console.log("Selected coordinates:", selectedLat, selectedLng);
        });

        // Đảm bảo bản đồ được điều chỉnh kích thước đúng
        setTimeout(() => {
            map.invalidateSize(); // Điều chỉnh kích thước bản đồ sau khi modal hiển thị
        }, 300);
    }

    function saveCoordinates() {
        if (selectedLat !== undefined && selectedLng !== undefined) {
            console.log("Saved coordinates:", selectedLat, selectedLng);

            document.getElementById('coordinateStatus').innerText = "(có thay đổi)";

            alert(`Đã lưu tọa độ mới`);
            closeMapModal();
        } else {
            alert("Vui lòng chọn một tọa độ mới trước khi lưu.");
        }
    }


    function showRoomEditModal(roomId) {
        console.log("Fetching Edit for room ID:", roomId);
        $.ajax({
            url: '/Manage/EditRoom',
            type: 'GET',
            data: { id: roomId },
            success: function (response) {
                console.log(response);
                if (response.code === 200) {
                    var room = response.dh.find(r => r.sMa == roomId);
                    if (room) {
                        // Set room details
                        $('#roomId').val(room.sMa);
                        $('#roomName').val(room.sTenPhong);
                        $('#roomPrice').val(formatPrice(room.dGiaCa));
                        $('#roomPilePrice').val(formatPrice(room.dGiaCoc));
                        $('#roomType').val(room.sIdKV);
                        $('#roomDienTich').val(room.sDienTich);
                        $('#roomSoLuong').val(room.sSoluong);
                        $('#roomSoNguoiO').val(room.sSoNguoiO);

                        if (room.dNgayCapNhat) {
                            $('#roomNCN').val(formatDateTime(room.dNgayCapNhat));
                        }

                        $('#roomDien').val(formatPrice(room.sDien));
                        $('#roomNuoc').val(formatPrice(room.sNuoc));
                        $('#roomGuiXe').val(formatPrice(room.sGuiXe));
                        $('#roomInternet').val(formatPrice(room.sInternet));
                        $('#roomAddress').val(room.sDiaChi);
                        $('#roomDescribe').val(room.sMoTa);

                        // Set the primary room image
                        $('#roomImage').attr('src', '/Images/' + room.sAnhBia);

                        // Load images onto the canvas
                        const canvas = document.getElementById('compositeImageCanvas');
                        const ctx = canvas.getContext('2d');
                        const images = [
                            new Image(),
                            new Image(),
                            new Image(),
                            new Image()
                        ];

                        let loadedImages = 0;
                        images.forEach((img, index) => {
                            img.src = '/Images/' + (room['sUrl_Path' + (index ? index + 1 : '')] || '');
                            img.onload = () => {
                                loadedImages++;
                                // Draw images on canvas once loaded
                                const x = (index % 2) * 200; // X position for the image
                                const y = Math.floor(index / 2) * 200; // Y position for the image
                                ctx.drawImage(img, x, y, 200, 200); // Draw image at specified position

                                // Set composite image source to canvas data once all images are loaded
                                if (loadedImages === images.length) {
                                    document.getElementById('compositeImage').src = canvas.toDataURL();
                                    // Optionally hide the canvas if you only want to show the composite image
                                    canvas.style.display = 'none';
                                }
                            };

                            img.onerror = () => {
                                console.error('Image failed to load:', img.src);
                            };
                        });

                        // Show the modal
                        $('#roomEditModal').modal('show');
                    } else {
                        alert("Room not found.");
                    }
                } else {
                    alert("Failed to fetch room details: " + response.msg);
                }
            }
        });
    }



    $('#saveChangesButton').click(function () {

        var roomData = {
            sMa: $('#roomId').val(),
            sTenPhong: $('#roomName').val(),
            dGiaCa: parseNumber($('#roomPrice').val()),
            dGiaCoc: parseNumber($('#roomPilePrice').val()),
            sIdKV: $('#roomType').val(),
            sDienTich: $('#roomDienTich').val(),
            sSoluong: $('#roomSoLuong').val(),
            sSoNguoiO: $('#roomSoNguoiO').val(),
            dNgayCapNhat: $('#roomNCN').val(),
            sDien: parseNumber($('#roomDien').val()),
            sNuoc: parseNumber($('#roomNuoc').val()),
            sGuiXe: parseNumber($('#roomGuiXe').val()),
            sInternet: parseNumber($('#roomInternet').val()),
            sMoTa: $('#roomDescribe').val(),
            sDiaChi: $('#roomAddress').val(),
        };

        if (selectedLat != null && selectedLng != null) {
            roomData.sMap = selectedLat + ',' + selectedLng;
        }

        var formData = new FormData();
        var roomImageUpload = $('#roomImageUpload')[0].files[0];
        var compositeImageUpload = $('#compositeImageUpload')[0].files;

        if (roomImageUpload) {
            formData.append('roomImage', roomImageUpload);
        }

        if (compositeImageUpload.length > 0) {
            for (let i = 0; i < compositeImageUpload.length; i++) {
                formData.append('compositeImages[]', compositeImageUpload[i]);
            }
        }
        Object.keys(roomData).forEach(key => {
            formData.append(key, roomData[key]);
        });

        $.ajax({
            url: '/Manage/UpdateRoom',
            type: 'POST',
            processData: false,
            contentType: false,
            data: formData,
            success: function (response) {
                if (response.code === 200) {
                    alert('Cập nhật thành công!');
                    location.reload();
                } else {
                    alert('Có lỗi xảy ra: ' + response.message);
                }
            },
            error: function (xhr, status, error) {
                alert('Có lỗi xảy ra khi gửi dữ liệu: ' + error);
            }
        });
    });

    function previewImage(event) {
        var output = document.getElementById('roomImage');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src) // free memory
        }
    }

    function previewCompositeImage(event) {
        var canvas = document.getElementById('compositeImageCanvas');
        var ctx = canvas.getContext('2d');
        var files = event.target.files;
        var images = [];

        // Clear the canvas before drawing new images
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        // Count how many images are loaded
        let imagesLoaded = 0;

        for (let i = 0; i < files.length; i++) {
            let img = new Image();
            img.src = URL.createObjectURL(files[i]);
            img.onload = function () {
                images.push(img);
                imagesLoaded++;

                // Check if all images are loaded
                if (imagesLoaded === files.length) {
                    drawImagesOnCanvas(images, ctx, canvas);
                }
            }
        }
    }

    function drawImagesOnCanvas(images, ctx, canvas) {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        images.forEach((img, index) => {
            const x = (index % 2) * 200;
            const y = Math.floor(index / 2) * 200;
            ctx.drawImage(img, x, y, 200, 200);
        });
        document.getElementById('compositeImage').src = canvas.toDataURL();
    }


    function formatPrice(price) {
        return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
    }

    function formatDateTime(jsonDate) {
        const timestamp = parseInt(jsonDate.match(/\d+/)[0], 10);
        const date = new Date(timestamp);
        return date.toLocaleString();
    }

    function formatNumber(input) {
        let value = input.value.replace(/[^0-9]/g, '');
        input.value = new Intl.NumberFormat('vi-VN', { style: 'decimal', minimumFractionDigits: 0 }).format(value);
    }

    function parseNumber(value) {
        if (value == null || typeof value !== 'string') {
            return NaN;
        }

        const cleanedValue = value.replace(/\./g, '').replace(/,/g, '.');

        const number = parseFloat(cleanedValue);

        return isNaN(number) ? NaN : number;
    }

    function openImageModal(imageSrc) {
        // Set the image in the modal
        document.getElementById('modalImage').src = imageSrc;

        // Show the modal
        $('#imageModal').modal('show');
    }


    $(document).ready(function () {
        $(".table").on("click", "#st2", function () {
            var id = $(this).data("id");
            $.ajax({
                url: "/Manage/DangLai",
                type: "POST",
                data: { id: id },
                success: function (result) {
                    alert("Cập nhật thành công");
                    window.location.reload();
                },
                error: function () {
                    alert("Đăng lại tin không thành công!");
                }
            });
        });

        $(".table").on("click", "#st1", function () {
            var id = $(this).data("id");
            $.ajax({
                url: "/Manage/NgungDang",
                type: "POST",
                data: { id: id },
                success: function (result) {
                    alert("Cập nhật thành công");
                    window.location.reload();
                },
                error: function () {
                    alert("Ngừng đăng tin không thành công!");
                }
            });
        });

        $(".table").on("click", "#idsua", function () {
            var id = $(this).data("id");
            window.location.href = "/Manage/Sua/" + id;
        });

        $(".table").on("click", "#idxoa", function () {
            var id = $(this).data("id");
            if (confirm("Bạn có chắc chắn muốn xóa phòng trọ này không?")) {
                $.ajax({
                    url: "/Manage/Xoa",
                    type: "POST",
                    data: { id: id },
                    success: function (result) {
                        alert("Cập nhật thành công");
                        window.location.reload();
                    },
                    error: function () {
                        alert("Xóa phòng trọ không thành công!");
                    }
                });
            }
        });
    });
</script>

<style>
    #addressSuggestions {
        list-style-type: none;
        padding: 0;
        margin-top: 5px;
        background-color: white;
        border: 1px solid #ccc;
        position: absolute;
        width: 80%;
        max-height: 150px;
        overflow-y: auto;
        z-index: 9999; /* Đảm bảo suggestions box nằm trên cùng */
    }
    .map-modal {
        display: none;
        background-color: rgba(0, 0, 0, 0.5); /* Màu nền tối */
        display: flex;
        align-items: center; /* Căn giữa theo chiều dọc */
        justify-content: center; /* Căn giữa theo chiều ngang */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    /* Styling specific to the map modal */
    .map-modal-content {
        position: relative;
        margin: auto;
        padding: 10px;
        width: 50%; /* Smaller width for map modal */
        max-width: 800px; /* Set a maximum width */
        background-color: white;
        border-radius: 8px;
    }

    .map-modal-content {
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    #mapModal {
        z-index: 1050; /* Đảm bảo modal hiển thị trên các phần tử khác */
        position: fixed; /* Đảm bảo modal ở vị trí cố định */
    }

    input {
        pointer-events: auto; /* Đảm bảo input có thể tương tác */
    }


    .close {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 20px;
        cursor: pointer;
    }


    .td_col3 {
        width: 300px;
        max-width: 300px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .mb-3 {
        margin-top: 10px;
    }

    .custom-modal {
        width: 90%;
        max-width: 1000px;
        height: auto;
    }

    .fa-camera {
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        padding: 5px;
    }

    .custom-image-container {
        display: flex;
        align-items: flex-start;
        justify-content: center;
    }

    .image-item {
        flex: 0 0 auto;
        margin-right: 50px;
        margin-left: 50px;
        position: relative;
    }

        .image-item label {
            margin-top: 5px;
            font-size: 14px;
            color: #333;
            text-align: center;
            display: block;
        }

    #okButton {
        margin: auto;
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        font-size: 16px;
        margin-top: 20px;
        cursor: pointer;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

        #okButton:hover {
            background-color: #45a049; /* Màu nền khi hover */
        }

        #okButton:active {
            background-color: #3e8e41; /* Màu nền khi nhấn */
        }
</style>